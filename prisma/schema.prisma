// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  todos     Todo[]

  @@map("users")
}

model Todo {
  id        String   @id @default(cuid())
  title     String
  completed Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id])

  @@map("todos")
}

model Conversation {
  id           String        @id @default(cuid())
  title        String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  messages     Message[]
  participants Participant[]
}

model Message {
  id             String       @id @default(cuid())
  text           String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId String
  participant    Participant  @relation(fields: [participantId], references: [id])
  participantId  String
}

model Participant {
  id             String        @id @default(cuid())
  email          String        @unique
  role           String        @default("USER")
  conversation   Conversation? @relation(fields: [conversationId], references: [id])
  conversationId String? // Make this field nullable
  createdAt      DateTime      @default(now())
  Message        Message[]
}
